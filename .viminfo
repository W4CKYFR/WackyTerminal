# This viminfo file was generated by Vim 9.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/^\/\/.*

# Last Substitute Search Pattern:
~MSle0&^\/\/.*

# Command Line History (newest to oldest):
:wq
|2,0,1746795242,,"wq"
:%d
|2,0,1746792044,,"%d"
:w
|2,0,1746728654,,"w"
:1,$
|2,0,1746724527,,"1,$"
:$yy
|2,0,1746724480,,"$yy"
:1,$y
|2,0,1746724426,,"1,$y"
:%y+
|2,0,1746724397,,"%y+"
:!
|2,0,1746721950,,"!"
:q
|2,0,1746721940,,"q"
:CocInstall coc-clangd
|2,0,1746637598,,"CocInstall coc-clangd"
:CocRestart
|2,0,1746637340,,"CocRestart"
:CocInfo
|2,0,1746637298,,"CocInfo"
:PlugInstall
|2,0,1746637222,,"PlugInstall"
::g/^\/\/.*/d
|2,0,1746634878,,":g/^\\/\\/.*/d"

# Search String History (newest to oldest):
? ^\/\/.*
|2,1,1746634878,,"^\\/\\/.*"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"0	LINE	0
	#include <ncurses.h>
	#include <string.h>
	#include <stdlib.h>
	#include <unistd.h>
	#include <time.h>
	
	#define MAX_INPUT 32
	
	int main() {
	    initscr();
	    noecho();
	    cbreak();
	    keypad(stdscr, TRUE);
	    start_color();
	    init_pair(1, COLOR_GREEN, COLOR_BLACK);
	    init_pair(2, COLOR_RED, COLOR_BLACK);
	
	    mvprintw(2, 2, "Welcome to Wacky's funky terminal!");
	    printw("\nType help to get a list of commands or enter q to close the terminal");
	
	    char input[MAX_INPUT];
	    int row = 5;
	
	    echo();
	
	    srand(time(NULL));
	
	    while (1) {
	        attron(COLOR_PAIR(1));
	        mvprintw(row++, 2, "> ");
	        attroff(COLOR_PAIR(1));
	        move(row - 1, 4);
	        getnstr(input, MAX_INPUT);
	
	        if (strcmp(input, "help") == 0) {
	            attron(COLOR_PAIR(1));
	            mvprintw(row++, 4, "List of commands:");
	            mvprintw(row++, 6, "- help");
	            mvprintw(row++, 6, "- q");
	            mvprintw(row++, 6, "- randomnum");
	            attroff(COLOR_PAIR(1));
	        } else if (strcmp(input, "q") == 0) {
	            break;
	        } else if (strcmp(input, "randomnum") == 0) {
		    char max_num[MAX_INPUT];
		    mvprintw(row++, 6, "Enter maximum number amount: ");
		    getnstr(max_num, MAX_INPUT)
	            int random_number = rand() % ;
	            mvprintw(row++, 6, "Random number: %d", random_number);
	        } else {
|3,0,0,1,50,0,1746724426,"#include <ncurses.h>","#include <string.h>","#include <stdlib.h>","#include <unistd.h>","#include <time.h>","","#define MAX_INPUT 32","","int main() {","    initscr();","    noecho();","    cbreak();","    keypad(stdscr, TRUE);","    start_color();","    init_pair(1, COLOR_GREEN, COLOR_BLACK);","    init_pair(2, COLOR_RED, COLOR_BLACK);","","    mvprintw(2, 2, \"Welcome to Wacky's funky terminal!\");",>90
|<"    printw(\"\\nType help to get a list of commands or enter q to close the terminal\");","","    char input[MAX_INPUT];","    int row = 5;","","    echo();","","    srand(time(NULL));","","    while (1) {","        attron(COLOR_PAIR(1));","        mvprintw(row++, 2, \"> \");","        attroff(COLOR_PAIR(1));","        move(row - 1, 4);","        getnstr(input, MAX_INPUT);","","        if (strcmp(input, \"help\") == 0) {","            attron(COLOR_PAIR(1));",>56
|<"            mvprintw(row++, 4, \"List of commands:\");","            mvprintw(row++, 6, \"- help\");","            mvprintw(row++, 6, \"- q\");","            mvprintw(row++, 6, \"- randomnum\");","            attroff(COLOR_PAIR(1));","        } else if (strcmp(input, \"q\") == 0) {","            break;","        } else if (strcmp(input, \"randomnum\") == 0) {","	    char max_num[MAX_INPUT];","	    mvprintw(row++, 6, \"Enter maximum number amount: \");",>34
|<"	    getnstr(max_num, MAX_INPUT)","            int random_number = rand() % ;","            mvprintw(row++, 6, \"Random number: %d\", random_number);","        } else {"
""1	LINE	0
	#include <ncurses.h>
	#include <string.h>
	#include <stdlib.h>
	#include <unistd.h>
	#include <time.h>
	
	#define MAX_INPUT 32
	
	int main() {
	    initscr();
	    noecho();
	    cbreak();
	    keypad(stdscr, TRUE);
	    start_color();
	    init_pair(1, COLOR_GREEN, COLOR_BLACK);
	    init_pair(2, COLOR_RED, COLOR_BLACK);
	
	    mvprintw(2, 2, "Welcome to Wacky's funky terminal!");
	    printw("\nType help to get a list of commands or enter q to close the terminal");
	
	    char input[MAX_INPUT];
	    int row = 5;
	
	    echo();
	
	    srand(time(NULL));
	
	    while (1) {
	        attron(COLOR_PAIR(1));
	        mvprintw(row++, 2, "> ");
	        attroff(COLOR_PAIR(1));
	        move(row - 1, 4);
	        getnstr(input, MAX_INPUT);
	
	        if (strcmp(input, "help") == 0) {
	            attron(COLOR_PAIR(1));
	            mvprintw(row++, 4, "List of commands:");
	            mvprintw(row++, 6, "- help (shows a list of commands)");
	            mvprintw(row++, 6, "- q (quits the terminal)");
		    mvprintw(row++, 6, "- clear (clears the terminal)");
	            mvprintw(row++, 6, "- randomnum (generates a random number)");
		    mvprintw(row++, 6, "- time (shows the time)");
		    mvprintw(row++, 6, "- run (let's you use real system commands)");	
	
	            attroff(COLOR_PAIR(1));
	        } else if (strcmp(input, "q") == 0) {
	            break;
	        } else if (strcmp(input, "randomnum") == 0) {
		    char max_num[MAX_INPUT];
		    mvprintw(row++, 6, "Enter maximum number amount: ");
|3,1,1,1,50,0,1746792044,"#include <ncurses.h>","#include <string.h>","#include <stdlib.h>","#include <unistd.h>","#include <time.h>","","#define MAX_INPUT 32","","int main() {","    initscr();","    noecho();","    cbreak();","    keypad(stdscr, TRUE);","    start_color();","    init_pair(1, COLOR_GREEN, COLOR_BLACK);","    init_pair(2, COLOR_RED, COLOR_BLACK);","","    mvprintw(2, 2, \"Welcome to Wacky's funky terminal!\");",>90
|<"    printw(\"\\nType help to get a list of commands or enter q to close the terminal\");","","    char input[MAX_INPUT];","    int row = 5;","","    echo();","","    srand(time(NULL));","","    while (1) {","        attron(COLOR_PAIR(1));","        mvprintw(row++, 2, \"> \");","        attroff(COLOR_PAIR(1));","        move(row - 1, 4);","        getnstr(input, MAX_INPUT);","","        if (strcmp(input, \"help\") == 0) {","            attron(COLOR_PAIR(1));",>56
|<"            mvprintw(row++, 4, \"List of commands:\");","            mvprintw(row++, 6, \"- help (shows a list of commands)\");","            mvprintw(row++, 6, \"- q (quits the terminal)\");","	    mvprintw(row++, 6, \"- clear (clears the terminal)\");","            mvprintw(row++, 6, \"- randomnum (generates a random number)\");","	    mvprintw(row++, 6, \"- time (shows the time)\");","	    mvprintw(row++, 6, \"- run (let's you use real system commands)\");	","",>37
|<"            attroff(COLOR_PAIR(1));","        } else if (strcmp(input, \"q\") == 0) {","            break;","        } else if (strcmp(input, \"randomnum\") == 0) {","	    char max_num[MAX_INPUT];","	    mvprintw(row++, 6, \"Enter maximum number amount: \");"
"2	LINE	0
	#include <ncurses.h>
	#include <string.h>
	#include <stdlib.h>
	#include <unistd.h>
	
	#define MAX_INPUT 32
	
	int main() {
	    initscr();
	    noecho();
	    cbreak();
	    keypad(stdscr, TRUE);
	    start_color();
	    init_pair(1, COLOR_GREEN, COLOR_BLACK);
	    init_pair(2, COLOR_RED, COLOR_BLACK);
	    mvprintw(2, 2, "Welcome to Wacky's funky terminal!");
	    printw("\nType help to get a list of commands or enter q to close the terminal");
	
	    char input[MAX_INPUT];
	    int row = 5;
	
	    echo();
	
	    while (1) {
	        attron(COLOR_PAIR(1));
	        mvprintw(row++, 2, "> ");
	        attroff(COLOR_PAIR(1));
	        move(row - 1, 4); 
	        getnstr(input, MAX_INPUT);
	
	        if (strcmp(input, "help") == 0) {
	            attron(COLOR_PAIR(1));
	            mvprintw(row++, 4, "List of commands:");
	            mvprintw(row++, 6, "- help");
	            mvprintw(row++, 6, "- q");
		    mvprintw(row++, 6, "- random number generator (enter 'randomnum')");
	            attroff(COLOR_PAIR(1));
	        } else if (strcmp(input, "q") == 0) {
	            break
		   else if (strcmp(input, "randomnum") {
		    int random_number = rand % 10000;
		    sleep(100);
		    mvprintw(row++, 6, "Random number: %d", random_number);
	        else {
		    attron(COLOR_PAIR(2));
	            mvprintw(row++, 4, "Unknown command: %s", input);
		    attroff(COLOR_PAIR(2));
	        }
	    }
	
|3,0,2,1,50,0,1746723687,"#include <ncurses.h>","#include <string.h>","#include <stdlib.h>","#include <unistd.h>","","#define MAX_INPUT 32","","int main() {","    initscr();","    noecho();","    cbreak();","    keypad(stdscr, TRUE);","    start_color();","    init_pair(1, COLOR_GREEN, COLOR_BLACK);","    init_pair(2, COLOR_RED, COLOR_BLACK);","    mvprintw(2, 2, \"Welcome to Wacky's funky terminal!\");",>90
|<"    printw(\"\\nType help to get a list of commands or enter q to close the terminal\");","","    char input[MAX_INPUT];","    int row = 5;","","    echo();","","    while (1) {","        attron(COLOR_PAIR(1));","        mvprintw(row++, 2, \"> \");","        attroff(COLOR_PAIR(1));","        move(row - 1, 4); ","        getnstr(input, MAX_INPUT);","","        if (strcmp(input, \"help\") == 0) {","            attron(COLOR_PAIR(1));",>56
|<"            mvprintw(row++, 4, \"List of commands:\");","            mvprintw(row++, 6, \"- help\");","            mvprintw(row++, 6, \"- q\");","	    mvprintw(row++, 6, \"- random number generator (enter 'randomnum')\");","            attroff(COLOR_PAIR(1));","        } else if (strcmp(input, \"q\") == 0) {","            break","	   else if (strcmp(input, \"randomnum\") {","	    int random_number = rand % 10000;","	    sleep(100);",>64
|<"	    mvprintw(row++, 6, \"Random number: %d\", random_number);","        else {","	    attron(COLOR_PAIR(2));","            mvprintw(row++, 4, \"Unknown command: %s\", input);","	    attroff(COLOR_PAIR(2));","        }","    }",""
"3	LINE	0
	#include <ncurses.h>
	#include <string.h>
	
	#define MAX_INPUT 32
	
	int main() {
	    initscr();
	    noecho();
	    cbreak();
	    keypad(stdscr, TRUE);
	    start_color(); 
	    init_pair(1, COLOR_GREEN, COLOR_BLACK);
	
	    mvprintw(2, 2, "Welcome to Wacky's funky terminal!");
	    printw("\nType help to get a list of commands or enter q to close the terminal");
	
	    char input[MAX_INPUT];
	
	    echo();
	    attron(COLOR_PAIR(1));
	    printw("\n > ");
	    attroff(COLOR_PAIR(1));
	    getnstr(input, MAX_INPUT);
	
	    if (strcmp(input, "help") == 0) {
	        attron(COLOR_PAIR(1));
	        printw("\nList of commands:\n - help\n - q");
	        attroff(COLOR_PAIR(1));
	    } else if (strcmp(input, "q") == 0) {
	        endwin();
	        return 0;
	    }
	
	    getch(); 
	    endwin();
	    return 0;
	}
	
|3,0,3,1,38,0,1746722679,"#include <ncurses.h>","#include <string.h>","","#define MAX_INPUT 32","","int main() {","    initscr();","    noecho();","    cbreak();","    keypad(stdscr, TRUE);","    start_color(); ","    init_pair(1, COLOR_GREEN, COLOR_BLACK);","","    mvprintw(2, 2, \"Welcome to Wacky's funky terminal!\");","    printw(\"\\nType help to get a list of commands or enter q to close the terminal\");","","    char input[MAX_INPUT];","","    echo();",>28
|<"    attron(COLOR_PAIR(1));","    printw(\"\\n > \");","    attroff(COLOR_PAIR(1));","    getnstr(input, MAX_INPUT);","","    if (strcmp(input, \"help\") == 0) {","        attron(COLOR_PAIR(1));","        printw(\"\\nList of commands:\\n - help\\n - q\");","        attroff(COLOR_PAIR(1));","    } else if (strcmp(input, \"q\") == 0) {","        endwin();","        return 0;","    }","","    getch(); ","    endwin();","    return 0;","}",""
"4	LINE	0
	#include <ncurses.h>
	#include <string.h>
	
	#define MAX_INPUT 32
	
	int main() {
	    initscr();            
	    noecho();             
	    cbreak();             
	    keypad(stdscr, TRUE); 
	
	    init_pair(1, COLOR_GREEN, COLOR_BLACK);
	
	    mvprintw(2, 2, "Welcome to Wacky's funky terminal!");
	    printw("Type help to get a list of commands or enter q to close the terminal");
	    char input[20];
		
	    start_color();
	    echo();
	    attron(COLOR_PAIR(1));
	    printw("\n > ");
	    attroff(COLOR_PAIR(1));
	    getnstr(input, MAX_INPUT);
	    
		
	    if (input == "help") {
		    attron(COLOR_PAIR(1))
		    printw(List of commands: );
		    attroff(COLOR_PAIR(1));
	    }
	    else if (input == "q") {
		    return 0;
		    endwin();:
	    }
	}
	
|3,0,4,1,36,0,1746722525,"#include <ncurses.h>","#include <string.h>","","#define MAX_INPUT 32","","int main() {","    initscr();            ","    noecho();             ","    cbreak();             ","    keypad(stdscr, TRUE); ","","    init_pair(1, COLOR_GREEN, COLOR_BLACK);","","    mvprintw(2, 2, \"Welcome to Wacky's funky terminal!\");","    printw(\"Type help to get a list of commands or enter q to close the terminal\");","    char input[20];","	",>20
|<"    start_color();","    echo();","    attron(COLOR_PAIR(1));","    printw(\"\\n > \");","    attroff(COLOR_PAIR(1));","    getnstr(input, MAX_INPUT);","    ","	","    if (input == \"help\") {","	    attron(COLOR_PAIR(1))","	    printw(List of commands: );","	    attroff(COLOR_PAIR(1));","    }","    else if (input == \"q\") {","	    return 0;","	    endwin();:","    }","}",""
"5	LINE	0
	#include <ncurses.h>
	#include <stdlib.h>
	#include <unistd.h>
	#include <time.h>
	
	#define SIZE 30
	#define DELAY 50000
	
	int main() {
	    initscr();
	    noecho();
	    curs_set(0);
	
	    if (start_color() == ERR) {
	        printw("Unable to start color functionality.");
	        refresh();
	        getch();
	        endwin();
	        return 1;
	    }
	
	    if (!has_colors()) {
	        printw("This terminal does not support colors.");
	        refresh();
	        getch();
	        endwin();
	        return 1;
	    }
	
	    init_pair(1, COLOR_RED, COLOR_BLACK);
	    init_pair(2, COLOR_GREEN, COLOR_BLACK);
	    init_pair(3, COLOR_BLUE, COLOR_BLACK);
	
	    int ch;
	    
	    // Loop to allow repeated interaction
	    while (1) {
	        clear();  // Clear the screen at the beginning of each loop iteration
	        refresh();  // Refresh the screen
	
	        // Display a prompt and wait for the user input
	        attron(COLOR_PAIR(1));
	        printw("Hello to the world of NCurses! Yippeee!!\n");
	        attroff(COLOR_PAIR(1));
	
	        printw("Press 'g' for green text, 'B' for blue text, or 'q' to quit.\n");
	        refresh();  // Refresh the screen to show the text
	
	        ch = getch();  // Get the input from the user
	
|3,0,5,1,50,0,1746634916,"#include <ncurses.h>","#include <stdlib.h>","#include <unistd.h>","#include <time.h>","","#define SIZE 30","#define DELAY 50000","","int main() {","    initscr();","    noecho();","    curs_set(0);","","    if (start_color() == ERR) {","        printw(\"Unable to start color functionality.\");","        refresh();","        getch();","        endwin();","        return 1;","    }","","    if (!has_colors()) {",>61
|<"        printw(\"This terminal does not support colors.\");","        refresh();","        getch();","        endwin();","        return 1;","    }","","    init_pair(1, COLOR_RED, COLOR_BLACK);","    init_pair(2, COLOR_GREEN, COLOR_BLACK);","    init_pair(3, COLOR_BLUE, COLOR_BLACK);","","    int ch;","    ","    // Loop to allow repeated interaction","    while (1) {","        clear();  // Clear the screen at the beginning of each loop iteration",>43
|<"        refresh();  // Refresh the screen","","        // Display a prompt and wait for the user input","        attron(COLOR_PAIR(1));","        printw(\"Hello to the world of NCurses! Yippeee!!\\n\");","        attroff(COLOR_PAIR(1));","","        printw(\"Press 'g' for green text, 'B' for blue text, or 'q' to quit.\\n\");","        refresh();  // Refresh the screen to show the text","","        ch = getch();  // Get the input from the user",""
"6	LINE	0
	#include <ncurses.h>
	#include <stdlib.h>
	#include <unistd.h>
	#include <time.h>
	
	#define SIZE 30
	#define DELAY 50000
	
	int main() {
	    initscr();
	    noecho();
	    curs_set(0);
	
	    if (start_color() == ERR) {
	        printw("Unable to start color functionality.");
	        refresh();
	        getch();
	        endwin();
	        return 1;
	    }
	
	    if (!has_colors()) {
	        printw("This terminal does not support colors.");
	        refresh();
	        getch();
	        endwin();
	        return 1;
	    }
	
	    init_pair(1, COLOR_RED, COLOR_BLACK);
	    init_pair(2, COLOR_GREEN, COLOR_BLACK);
	    init_pair(3, COLOR_BLUE, COLOR_BLACK);
	
	    attron(COLOR_PAIR(1));
	    printw("Hello to the world of NCurses! Yippeee!!\n");
	    attroff(COLOR_PAIR(1));
	
	    int ch = getch();
	
	    if (ch == 'g') {
	        attron(COLOR_PAIR(2));
	        printw("This is some nicely colored green text, mate!");
	        attroff(COLOR_PAIR(2));
	    }
	    else if (ch == 'b') {
	        attron(COLOR_PAIR(3));
	        printw("This right here is so preem blue text, man!");
	        attroff(COLOR_PAIR(3));
	    }
	
|3,0,6,1,50,0,1746634701,"#include <ncurses.h>","#include <stdlib.h>","#include <unistd.h>","#include <time.h>","","#define SIZE 30","#define DELAY 50000","","int main() {","    initscr();","    noecho();","    curs_set(0);","","    if (start_color() == ERR) {","        printw(\"Unable to start color functionality.\");","        refresh();","        getch();","        endwin();","        return 1;","    }","","    if (!has_colors()) {",>61
|<"        printw(\"This terminal does not support colors.\");","        refresh();","        getch();","        endwin();","        return 1;","    }","","    init_pair(1, COLOR_RED, COLOR_BLACK);","    init_pair(2, COLOR_GREEN, COLOR_BLACK);","    init_pair(3, COLOR_BLUE, COLOR_BLACK);","","    attron(COLOR_PAIR(1));","    printw(\"Hello to the world of NCurses! Yippeee!!\\n\");","    attroff(COLOR_PAIR(1));","","    int ch = getch();","","    if (ch == 'g') {",>32
|<"        attron(COLOR_PAIR(2));","        printw(\"This is some nicely colored green text, mate!\");","        attroff(COLOR_PAIR(2));","    }","    else if (ch == 'b') {","        attron(COLOR_PAIR(3));","        printw(\"This right here is so preem blue text, man!\");","        attroff(COLOR_PAIR(3));","    }",""
"-	CHAR	0
	E
|3,0,36,0,1,0,1746637312,"E"

# File marks:
'0  13  0  ~/.gitignore
|4,48,13,0,1746795242,"~/.gitignore"
'1  78  29  ~/wackyterminal.c
|4,49,78,29,1746792556,"~/wackyterminal.c"
'2  90  18  ~/wackyterminal.c
|4,50,90,18,1746792259,"~/wackyterminal.c"
'3  88  18  ~/wackyterminal.c
|4,51,88,18,1746792259,"~/wackyterminal.c"
'4  52  0  ~/wackyterminal.c
|4,52,52,0,1746792074,"~/wackyterminal.c"
'5  52  0  ~/wackyterminal.c
|4,53,52,0,1746792074,"~/wackyterminal.c"
'6  52  0  ~/wackyterminal.c
|4,54,52,0,1746792074,"~/wackyterminal.c"
'7  52  0  ~/wackyterminal.c
|4,55,52,0,1746792074,"~/wackyterminal.c"
'8  1  17  ~/wackyterminal.c
|4,56,1,17,1746728971,"~/wackyterminal.c"
'9  47  17  ~/wackyterminal.c
|4,57,47,17,1746728971,"~/wackyterminal.c"

# Jumplist (newest first):
-'  13  0  ~/.gitignore
|4,39,13,0,1746795242,"~/.gitignore"
-'  1  0  ~/.gitignore
|4,39,1,0,1746795226,"~/.gitignore"
-'  78  29  ~/wackyterminal.c
|4,39,78,29,1746792556,"~/wackyterminal.c"
-'  78  29  ~/wackyterminal.c
|4,39,78,29,1746792556,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746792465,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746792465,"~/wackyterminal.c"
-'  90  18  ~/wackyterminal.c
|4,39,90,18,1746792259,"~/wackyterminal.c"
-'  88  18  ~/wackyterminal.c
|4,39,88,18,1746792259,"~/wackyterminal.c"
-'  90  18  ~/wackyterminal.c
|4,39,90,18,1746792259,"~/wackyterminal.c"
-'  88  18  ~/wackyterminal.c
|4,39,88,18,1746792259,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746792209,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746792209,"~/wackyterminal.c"
-'  52  0  ~/wackyterminal.c
|4,39,52,0,1746792074,"~/wackyterminal.c"
-'  52  0  ~/wackyterminal.c
|4,39,52,0,1746792074,"~/wackyterminal.c"
-'  52  0  ~/wackyterminal.c
|4,39,52,0,1746792074,"~/wackyterminal.c"
-'  52  0  ~/wackyterminal.c
|4,39,52,0,1746792074,"~/wackyterminal.c"
-'  52  0  ~/wackyterminal.c
|4,39,52,0,1746792074,"~/wackyterminal.c"
-'  52  0  ~/wackyterminal.c
|4,39,52,0,1746792074,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746792044,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746792044,"~/wackyterminal.c"
-'  47  17  ~/wackyterminal.c
|4,39,47,17,1746728971,"~/wackyterminal.c"
-'  47  17  ~/wackyterminal.c
|4,39,47,17,1746728971,"~/wackyterminal.c"
-'  47  17  ~/wackyterminal.c
|4,39,47,17,1746728971,"~/wackyterminal.c"
-'  47  17  ~/wackyterminal.c
|4,39,47,17,1746728971,"~/wackyterminal.c"
-'  47  17  ~/wackyterminal.c
|4,39,47,17,1746728971,"~/wackyterminal.c"
-'  47  17  ~/wackyterminal.c
|4,39,47,17,1746728971,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746728610,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746728610,"~/wackyterminal.c"
-'  76  354  ~/wackyterminal.c
|4,39,76,354,1746728568,"~/wackyterminal.c"
-'  87  5  ~/wackyterminal.c
|4,39,87,5,1746728568,"~/wackyterminal.c"
-'  87  5  ~/wackyterminal.c
|4,39,87,5,1746728568,"~/wackyterminal.c"
-'  87  5  ~/wackyterminal.c
|4,39,87,5,1746728568,"~/wackyterminal.c"
-'  76  354  ~/wackyterminal.c
|4,39,76,354,1746728568,"~/wackyterminal.c"
-'  87  5  ~/wackyterminal.c
|4,39,87,5,1746728568,"~/wackyterminal.c"
-'  87  5  ~/wackyterminal.c
|4,39,87,5,1746728568,"~/wackyterminal.c"
-'  87  5  ~/wackyterminal.c
|4,39,87,5,1746728568,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746728146,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746728146,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  76  23  ~/wackyterminal.c
|4,39,76,23,1746728108,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746728075,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746728075,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  77  25  ~/wackyterminal.c
|4,39,77,25,1746728042,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746727869,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746727869,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  78  5  ~/wackyterminal.c
|4,39,78,5,1746727789,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746727734,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746727734,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  70  18  ~/wackyterminal.c
|4,39,70,18,1746727690,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746726631,"~/wackyterminal.c"
-'  1  0  ~/wackyterminal.c
|4,39,1,0,1746726631,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"
-'  42  26  ~/wackyterminal.c
|4,39,42,26,1746726528,"~/wackyterminal.c"

# History of marks within files (newest to oldest):

> ~/.gitignore
	*	1746795239	0
	"	13	0
	^	13	0
	.	12	13
	+	12	13

> ~/wackyterminal.c
	*	1746792554	0
	"	78	29
	^	78	30
	.	78	30
	+	1	54
	+	1	4
	+	1	0
	+	1	4
	+	1	3
	+	1	12
	+	1	5
	+	1	3
	+	1	1
	+	1	3
	+	1	25
	+	1	0
	+	1	2
	+	1	0
	+	1	58
	+	1	0
	+	1	31
	+	1	4
	+	1	59
	+	1	4
	+	1	0
	+	1	21
	+	1	92
	+	1	0
	+	1	47
	+	1	57
	+	1	84
	+	1	11
	+	1	29
	+	1	0
	+	1	15
	+	1	1
	+	1	41
	+	1	57
	+	1	0
	+	1	26
	+	1	0
	+	1	33
	+	1	41
	+	1	27
	+	1	45
	+	1	66
	+	1	47
	+	1	70
	+	1	0
	+	1	55
	+	1	64
	+	1	29
	+	1	51
	+	1	7
	+	1	50
	+	1	27
	+	1	0
	+	1	26
	+	1	6
	+	1	0
	+	1	33
	+	1	42
	+	1	48
	+	1	1
	+	1	49
	+	1	2
	+	1	0
	+	1	15
	+	1	5
	+	1	8
	+	1	7
	+	1	10
	+	1	7
	+	1	8
	+	1	22
	+	1	17
	+	1	20
	+	103	1
	+	76	105
	+	76	52
	+	90	18
	+	89	55
	+	78	9
	+	79	5
	+	80	2
	+	81	1
	+	82	1
	+	83	1
	+	84	1
	+	85	1
	+	86	1
	+	87	1
	+	88	2
	+	89	1
	+	90	9
	+	80	23
	+	78	30

> ~/wackyteminal.c
	*	1746720534	0
	"	1	0

> ~/wackyterminal
	*	1746707861	0
	"	1	0

> ~/.vimrc
	*	1746637128	0
	"	7	0
	^	7	0
	.	6	15
	+	6	15

> ~/WackyTerminal
	*	1746636780	0
	"	1	10
	.	1	10
	+	1	10

> ~/WackySort.c
	*	1746636764	0
	"	8	0
	^	35	4
	.	35	4
	+	1	20
	+	1	39
	+	1	58
	+	1	75
	+	1	1215
	+	1	1202
	+	1	1089
	+	1	121
	+	1	53
	+	1	155
	+	1	25
	+	1	355
	+	1	391
	+	1	25
	+	1	308
	+	1	34
	+	1	312
	+	1	14
	+	1	172
	+	1	290
	+	1	312
	+	1	313
	+	1	361
	+	1	249
	+	1	572
	+	1	629
	+	1	637
	+	1	221
	+	1	568
	+	1	652
	+	1	581
	+	1	363
	+	1	407
	+	1	548
	+	1	450
	+	1	545
	+	1	458
	+	1	523
	+	1	426
	+	1	548
	+	1	399
	+	1	546
	+	1	467
	+	1	409
	+	1	570
	+	1	677
	+	1	571
	+	1	288
	+	1	566
	+	1	594
	+	1	651
	+	1	674
	+	1	594
	+	1	659
	+	1	14
	+	1	20
	+	1	18
	+	1	20
	+	1	1
	+	1	20
	+	64	1
	+	49	24
	+	40	0
	+	40	32
	+	40	60
	+	41	0
	+	36	0
	+	35	17
	+	34	0
	+	33	0
	+	34	4
	+	35	4

> ~/WackySort
	*	1746636051	0
	"	6	0
